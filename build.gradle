plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'com.h2database:h2'
    // webflux를 사용하여 테스트하기 위해, 그러나 이젠 webflux와 restTemplate 대신 webClient 사용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    // thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    // 세션 정보가 내장 톰캣에 저장되어 앱 재시작 시 초기화. AWS의 RDS를 사용하기 위해 설정을 변경
    // Redis를 사용하는 편이 DB IO측면에서 유리하나 AWS의 elastic cache가 유료여서 RDS를 사용.
    implementation 'org.springframework.session:spring-session-jdbc'

    // 테스트 환경에서 임의로 인증된 사용자를 추가해 API 테스트가 가능하도록
    testImplementation 'org.springframework.security:spring-security-test'

    // AWS RDS인 MariaDB를 사용 가능하도록
    implementation 'org.mariadb.jdbc:mariadb-java-client'
}

tasks.named('test') {
    useJUnitPlatform()
}
